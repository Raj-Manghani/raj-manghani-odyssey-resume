# ~/raj-manghani-odyssey-resume/proxy/nginx.conf
# FINAL* configuration (options-ssl and dhparam commented out)

events {
    worker_connections 1024;
}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    client_max_body_size 10M;
    gzip on;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
    gzip_min_length 1000;
    gzip_comp_level 6;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # ----- Server Block for HTTP (Port 80) -----
    # Handles ACME challenges and redirects to HTTPS
    server {
        listen 80;
        listen [::]:80;

        server_name resume.devbyraj.com; # *** YOUR DOMAIN NAME ***

        # Location for Let's Encrypt ACME challenge verification
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot; # Path corresponds to certbot_webroot volume mount
        }

        # For all other HTTP requests, redirect permanently (301) to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # ----- Server Block for HTTPS (Port 443) -----
    # Handles secure traffic
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name resume.devbyraj.com; # *** YOUR DOMAIN NAME ***

        # --- SSL Certificate lines are UNCOMMENTED ---
        ssl_certificate /etc/letsencrypt/live/resume.devbyraj.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/resume.devbyraj.com/privkey.pem;

        # --- The following includes are COMMENTED OUT as they weren't generated by certonly ---
        # include /etc/letsencrypt/options-ssl-nginx.conf; # Recommended SSL options
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # Diffie-Hellman params
        # --- You might add basic SSL protocols/ciphers here if needed, but defaults often work ---
        ssl_protocols TLSv1.2 TLSv1.3; # Example: Explicitly set modern protocols

        # Access and error logs (optional)
        # access_log /var/log/nginx/resume.devbyraj.com.access.log;
        # error_log /var/log/nginx/resume.devbyraj.com.error.log;

        # ---- Proxy Configurations for HTTPS ----

        location /ws/ {
            proxy_pass http://backend:3001;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_read_timeout 7d;
            proxy_send_timeout 7d;
            proxy_connect_timeout 7d;
        }

        # ---- Location block for Grafana ----
        location /grafana/ {
            proxy_pass http://localhost:3012/; # Forward to the tunnelled port
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade; # For WebSocket support
            proxy_set_header Connection $connection_upgrade; # For WebSocket support
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            # Optional: Add longer timeouts if needed
            # proxy_read_timeout 90s;
            # proxy_send_timeout 90s;
            # proxy_connect_timeout 90s;
        }

        location / {
            proxy_pass http://frontend:80; # Default to frontend app
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }

} # End of http block
